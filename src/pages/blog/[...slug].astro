---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import PrevNextLinking from '../../components/PrevNextListing.astro';

export const sortByDate = (a, b) => {
  return new Date(b.data.pubDate) - new Date(a.data.pubDate);
}

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const numberOfPosts = posts.length;
  return posts.sort(sortByDate).map((post, i) => ({
    params: { slug: post.slug },
    props: {
      post,
      prevPost: // Previous post
          i + 1 === numberOfPosts // If the current post is the oldest
            ? { frontmatter: ""}
            : posts[i + 1],
      nextPost: // Next post
        i === 0 // If the current post is the newest
          ? { frontmatter: "" }
          : posts[i - 1],
        }
  }));
}

type Props = CollectionEntry<'posts'>;

const { post, prevPost, nextPost, prevSlug, prevTitle, nextSlug, nextTitle, contentType } = Astro.props;
const { Content } = await post.render();

---

<BlogPost {...post.data}>
	<Content />
	<PrevNextLinking prevPost={prevPost.data} nextPost={nextPost.data} prevSlug={prevPost?.slug} prevTitle={prevPost.data?.title} nextSlug={nextPost?.slug} nextTitle={nextPost.data?.title} />
</BlogPost>
